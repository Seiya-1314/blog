(window.webpackJsonp=window.webpackJsonp||[]).push([[280],{448:function(t,r,e){"use strict";e.r(r);var n=e(0),i=Object(n.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("br"),t._v(" "),t._m(1),t._v(" "),e("br"),t._v(" "),t._m(2),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(3),t._v(" "),e("router-link",{attrs:{to:"./基础语法/1-typescript原始数据类型.html"}},[t._v("TypeScript 原始数据类型")])],1),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/primitive-data-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》（原始数据类型）"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(6),t._v(" "),e("router-link",{attrs:{to:"./基础语法/2-typescript类型推论.html"}},[t._v("TypeScript 类型推论")])],1),t._v(" "),e("p",[t._v("如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。")]),t._v(" "),t._m(7),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/type-inference",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(类型推论)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Type%20Inference.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(类型推论)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(8),t._v(" "),e("router-link",{attrs:{to:"./基础语法/3-typescript联合类型.html"}},[t._v("TypeScript 联合类型")])],1),t._v(" "),t._m(9),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/union-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(联合类型)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(10),t._v(" "),e("router-link",{attrs:{to:"./基础语法/4-typescript对象的类型.html"}},[t._v("TypeScript 对象的类型")])],1),t._v(" "),e("p",[t._v("TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。")]),t._v(" "),t._m(11),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/type-of-object-interfaces",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(对象的类型)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Interfaces.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(对象的类型)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(12),t._v(" "),e("router-link",{attrs:{to:"./基础语法/5-typescript数组的类型.html"}},[t._v("TypeScript 数组的类型")])],1),t._v(" "),e("p",[t._v("TypeScript 像 JavaScript 一样可以操作数组元素，有两种方式可以定义数组。")]),t._v(" "),t._m(13),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/type-of-array",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(数组的类型)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(14),t._v(" "),e("router-link",{attrs:{to:"./基础语法/6-typescript函数的类型.html"}},[t._v("TypeScript 函数的类型")])],1),t._v(" "),e("p",[t._v("函数是 JavaScript 应用程序的基础。 它帮助你实现抽象层，模拟类，信息隐藏和模块。在 TypeScript 里，虽然已经支持类，命名空间和模块，但函数仍然是主要的定义行为的地方。")]),t._v(" "),t._m(15),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/type-of-function",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(函数的类型)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(函数)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(16),t._v(" "),e("router-link",{attrs:{to:"./基础语法/7-typescript类型断言.html"}},[t._v("TypeScript 类型断言")])],1),t._v(" "),e("p",[t._v("类型断言（Type Assertion）可以用来手动指定一个值的类型。")]),t._v(" "),t._m(17),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/type-assertion",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(类型断言)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(18),t._v(" "),e("router-link",{attrs:{to:"./基础语法/8-typescript变量声明.html"}},[t._v("TypeScript 变量声明")])],1),t._v(" "),e("p",[t._v("因为TypeScript是JavaScript的超集，所以它本身就支持let和const。")]),t._v(" "),t._m(19),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Variable%20Declarations.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(变量声明)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(20),t._v(" "),e("router-link",{attrs:{to:"./基础语法/9-typescript引用声明文件.html"}},[t._v("TypeScript 引用声明文件")])],1),t._v(" "),e("p",[t._v("当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。")]),t._v(" "),t._m(21),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/declaration-files",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(引用声明文件)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(22),t._v(" "),e("router-link",{attrs:{to:"./基础语法/10-typescript内置对象.html"}},[t._v("TypeScript 内置对象")])],1),t._v(" "),e("p",[t._v("内置对象是指根据标准在全局作用域（Global）上存在的对象。这里的标准是指 ECMAScript 和其他环境（比如 DOM）的标准。")]),t._v(" "),t._m(23),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/basics/built-in-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(内置对象)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])])])]),t._v(" "),e("br"),t._v(" "),t._m(24),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(25),t._v(" "),e("router-link",{attrs:{to:"./进阶/11-typescript高级类型.html"}},[t._v("TypeScript 高级类型")])],1),t._v(" "),t._m(26),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(高级类型)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/type-aliases",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(类型别名)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/string-literal-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(字符串字面量类型)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(27),t._v(" "),e("router-link",{attrs:{to:"./进阶/12-typescript元组.html"}},[t._v("TypeScript 元组")])],1),t._v(" "),e("p",[t._v("数组合并了相同类型的对象，而元组（Tuple）合并了不同类型的对象。元组起源于函数编程语言（如 F#）,在这些语言中频繁使用元组。")]),t._v(" "),t._m(28),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Basic%20Types.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(基础类型)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/tuple",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(元组)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(29),t._v(" "),e("router-link",{attrs:{to:"./进阶/13-typescript枚举.html"}},[t._v("TypeScript 枚举")])],1),t._v(" "),e("p",[t._v("枚举（Enum）类型用于取值被限定在一定范围内的场景，比如一周只能有七天，颜色限定为红绿蓝等。")]),t._v(" "),t._m(30),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Basic%20Types.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(基础类型)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/enum",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(枚举)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(31),t._v(" "),e("router-link",{attrs:{to:"./进阶/14-typescript类.html"}},[t._v("TypeScript 类")])],1),t._v(" "),e("p",[t._v("传统方法中，JavaScript 通过构造函数实现类的概念，通过原型链实现继承。而在 ES6 中，我们终于迎来了 class。TypeScript 除了实现了所有 ES6 中的类的功能以外，还添加了一些新的用法。")]),t._v(" "),t._m(32),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Classes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(类)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/class",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(类)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(33),t._v(" "),e("router-link",{attrs:{to:"./进阶/15-typescript接口.html"}},[t._v("TypeScript 接口")])],1),t._v(" "),e("p",[t._v("实现（implements）是面向对象中的一个重要概念。一般来讲，一个类只能继承自另一个类，有时候不同类之间可以有一些共有的特性，这时候就可以把特性提取成接口。")]),t._v(" "),t._m(34),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Interfaces.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(接口)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/class-and-interfaces",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(类和接口)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(35),t._v(" "),e("router-link",{attrs:{to:"./进阶/16-typescript泛型.html"}},[t._v("TypeScript 泛型")])],1),t._v(" "),e("p",[t._v("泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。")]),t._v(" "),t._m(36),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Generics.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Handbook》(泛型)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/generics",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(泛型)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])]),t._v(" "),e("hr")])]),t._v(" "),e("br"),t._v(" "),e("ul",[e("li",[e("p",[t._m(37),t._v(" "),e("router-link",{attrs:{to:"./进阶/17-typescript声明合并.html"}},[t._v("TypeScript 声明合并")])],1),t._v(" "),e("p",[t._v("如果定义了两个相同名字的函数、接口或类，那么它们会合并成一个类型。")]),t._v(" "),t._m(38),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com/advanced/generics",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript 入门教程》(声明合并)"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])])])]),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),t._m(39),t._v(" "),e("br"),t._v(" "),t._m(40),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("typescript 官网"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript Handbook（中文版）"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://ts.xcatliu.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript 入门教程"),e("OutboundLink")],1)])])]),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),t._m(41),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://coding.imooc.com/class/330.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("慕课网 - 基于 TypeScript 从零重构 axios"),e("OutboundLink")],1)])]),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br")])},[function(){var t=this.$createElement,r=this._self._c||t;return r("h1",{attrs:{id:"typescript-学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript-学习","aria-hidden":"true"}},[this._v("#")]),this._v(" TypeScript 学习")])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[this._v("整篇博客是记录自己在 "),r("code",[this._v("TypeScript")]),this._v(" 学习过程中的一些资料和总结，部分是网上找到的整理好的内容，在这里只是做一个资源的汇总，方便自己能够更好的进行回顾。")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基础","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础")])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第一篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("code",[this._v("TypeScript")]),this._v(" 是微软开发一款开源的编程语言，本质上是向 "),r("code",[this._v("JavaScript")]),this._v(" 增加静态类型系统。")])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第二篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第三篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第四篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第五篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第六篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第七篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第八篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第九篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"进阶"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进阶","aria-hidden":"true"}},[this._v("#")]),this._v(" 进阶")])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十一篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十二篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十三篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十四篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十五篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十六篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("strong",[r("code",[this._v("[第十七篇]")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[r("strong",[this._v("推荐阅读：")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"扩展学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扩展学习","aria-hidden":"true"}},[this._v("#")]),this._v(" 扩展学习")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"文档"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 文档")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"教程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#教程","aria-hidden":"true"}},[this._v("#")]),this._v(" 教程")])}],!1,null,null,null);r.default=i.exports}}]);