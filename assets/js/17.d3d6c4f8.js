(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{335:function(t,e,r){t.exports=r.p+"assets/img/4-1.d4b31931.png"},336:function(t,e,r){t.exports=r.p+"assets/img/4-2.249bb934.png"},337:function(t,e,r){t.exports=r.p+"assets/img/4-3.95c6c06c.png"},338:function(t,e,r){t.exports=r.p+"assets/img/4-4.137eddb2.png"},472:function(t,e,r){"use strict";r.r(e);var s=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"vue-组件的生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件的生命周期","aria-hidden":"true"}},[this._v("#")]),this._v(" Vue 组件的生命周期")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"生命周期图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期图","aria-hidden":"true"}},[this._v("#")]),this._v(" 生命周期图")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(335),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"创建阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建阶段","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建阶段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(336),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"beforecreate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate","aria-hidden":"true"}},[this._v("#")]),this._v(" beforeCreate")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("p",[r("strong",[t._v("实例初始化")]),t._v(" —— "),r("code",[t._v("new Vue()")]),t._v("；")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("数据观测")]),t._v(" —— 在vue的响应式系统中加入data对象中所有数据；")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("暴露属性和方法")]),t._v(" —— 就是 vue 实例自带的一些属性和方法；")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"created"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#created","aria-hidden":"true"}},[this._v("#")]),this._v(" created")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("p",[t._v("初始化实例中的各种属性，包括：Inject 、Provide 、 props 、methods 、data 、computed 和 watch 等；")])]),t._v(" "),r("li",[r("p",[t._v('当 created 阶段完成之后，vue 会优先判断实例中是否含有 "el" 属性，如果没有，则调用 '),r("code",[t._v("vm.$mount(el)")]),t._v(" 方法，然后执行下一步；如果有的话，直接执行下一步；")])]),t._v(" "),r("li",[r("p",[t._v("然后判断是否含有 “template” 属性，如果有的话，把 template 解析成一个 render 函数；如果没有，就调用外部的 html（注意：实例内部的 template 属性比外部的优先级高）；若都不存在，那么 vue 会抛出错误；")])]),t._v(" "),r("li",[r("p",[t._v("如果 vue 实例中存在 render 函数，那么优先级为："),r("strong",[t._v("render函数 > template属性 > 外部html")]),t._v("；")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"beforemount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforemount","aria-hidden":"true"}},[this._v("#")]),this._v(" beforeMount")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("注意：")]),this._v(" "),e("p",[this._v("beforeMount 在有了 render 函数的时候才会执行，当执行完 render 函数之后，就会调用 mounted 这个钩子。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"mounted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mounted","aria-hidden":"true"}},[this._v("#")]),this._v(" mounted")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("注意：")]),this._v(" "),e("p",[this._v("在 mounted 挂载完毕之后，这个实例就算是走完流程了。因为后续的钩子函数执行的过程都是需要外部的触发才会执行。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"更新阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新阶段","aria-hidden":"true"}},[this._v("#")]),this._v(" 更新阶段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(337),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"beforeupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate","aria-hidden":"true"}},[this._v("#")]),this._v(" beforeUpdate")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("每当数据变化或者强制更新（ "),e("code",[this._v("this.$forceUpdate()")]),this._v(" ）的时候，就会开始执行 render 函数，生成最新的 Virtual DOM，开始更新真实 DOM。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"updated"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#updated","aria-hidden":"true"}},[this._v("#")]),this._v(" updated")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这里和 mounted 一样，它承诺子组件已经更新完。此时，如果你想操作 DOM 的话，需要放到 "),e("code",[this._v("this.$nextTick")]),this._v(" 的回调中。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("注意：")]),this._v(" "),e("p",[this._v("在 beforeUpdate 和 updated 钩子函数中，切记不可更改依赖数据，否则会导致死循环。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"销毁阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#销毁阶段","aria-hidden":"true"}},[this._v("#")]),this._v(" 销毁阶段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(338),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"beforedestroy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy","aria-hidden":"true"}},[this._v("#")]),this._v(" beforeDestroy")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"destroyed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#destroyed","aria-hidden":"true"}},[this._v("#")]),this._v(" destroyed")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ol",[r("li",[r("p",[r("strong",[r("code",[t._v("beforeCreate")])]),t._v(" ：初始化了部分参数，如果有相同的参数，做了参数合并，执行 beforeCreate ；")])]),t._v(" "),r("li",[r("p",[r("strong",[r("code",[t._v("created")])]),t._v(" ：初始化了 Inject 、Provide 、 props 、methods 、data 、computed 和 watch，执行 created ；")])]),t._v(" "),r("li",[r("p",[r("strong",[r("code",[t._v("beforeMount")])]),t._v(" ：检查是否存在 el 属性，存在的话进行渲染 dom 操作，执行 beforeMount ；")])]),t._v(" "),r("li",[r("p",[r("strong",[r("code",[t._v("mounted")])]),t._v(" ：实例化 Watcher ，渲染 dom，执行 mounted ；")])]),t._v(" "),r("li",[r("p",[r("strong",[r("code",[t._v("beforeUpdate")])]),t._v(" ：在数据更新的时候，执行 beforeUpdate ；")])]),t._v(" "),r("li",[r("p",[r("strong",[r("code",[t._v("updated")])]),t._v(" ：检查当前的 watcher 列表中，是否存在当前要更新数据的 watcher ，如果存在就执行 updated ；")])]),t._v(" "),r("li",[r("p",[r("strong",[r("code",[t._v("beforeDestroy")])]),t._v(" ：检查是否已经被卸载，如果已经被卸载，就直接 return 出去，否则执行 beforeDestroy ；")])]),t._v(" "),r("li",[r("p",[r("strong",[r("code",[t._v("destroyed")])]),t._v(" ：把所有有关自己痕迹的地方，都给删除掉；")])])])}],a=r(0),_=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("br"),t._v(" "),r("author",{attrs:{time:"2019年08月23日"}}),t._v(" "),r("br"),t._v(" "),t._m(1),t._v(" "),r("br"),t._v(" "),t._m(2),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(3),t._v(" "),r("br"),t._v(" "),t._m(4),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(9),t._v(" "),r("p",[t._v("执行 render 函数进行模板编译，生成 Virtual DOM。")]),t._v(" "),r("br"),t._v(" "),t._m(10),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(11),t._v(" "),r("p",[t._v("将生成后的 Virtual DOM 渲染到 DOM 中。")]),t._v(" "),r("br"),t._v(" "),t._m(12),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(13),t._v(" "),r("br"),t._v(" "),t._m(14),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(17),t._v(" "),r("p",[t._v("当 DOM 更新完毕时，开始执行 updated 钩子函数。因为有多个组件的时候，会有很多个 watcher ，在这里，就是检查当前的得 watcher 是哪个，是当前的话，就直接执行当前 updated 钩子。")]),t._v(" "),t._m(18),t._v(" "),r("br"),t._v(" "),t._m(19),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(20),t._v(" "),r("br"),t._v(" "),t._m(21),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(22),t._v(" "),r("p",[t._v("当组件开始销毁的时候，它会调用 beforeDestory。在卸载前，检查是否已经被卸载，如果已经被卸载，就直接 return 出去。")]),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(23),t._v(" "),r("p",[t._v("destroyed 阶段就是把所有有关自己痕迹的地方，都给删除掉，比如：从父级删除自己、拆解观察者等。")]),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),r("br"),t._v(" "),t._m(24),t._v(" "),r("br"),t._v(" "),t._m(25)],1)},s,!1,null,null,null);e.default=_.exports}}]);